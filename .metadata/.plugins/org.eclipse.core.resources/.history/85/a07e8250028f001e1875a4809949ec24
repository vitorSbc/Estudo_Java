package model.entitie;

import java.time.Duration;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import model.exceptions.DomainExecption;

public class Reserva {
	
	private Integer roomNumber;
	private LocalDate checkin;
	private LocalDate checkout;
	
	public Reserva() {
		
	}
	
	public Reserva(Integer roomNumber, LocalDate checkin, LocalDate checkout) {
		this.roomNumber = roomNumber;
		this.checkin = checkin;
		this.checkout = checkout;
	}

	public Integer getRoomNumber() {
		return roomNumber;
	}

	public void setRoomNumber(Integer roomNumber) {
		this.roomNumber = roomNumber;
	}

	public LocalDate getCheckin() {
		return checkin;
	}

	public LocalDate getCheckout() {
		return checkout;
	}
	
	public long duration() {	
		Duration diferenca = Duration.between(checkin.atStartOfDay(), checkout.atStartOfDay());
		return diferenca.toDays();
	}
	
	public void updateDate(LocalDate chekcin, LocalDate chekout) throws DomainExecption {
		LocalDate now = LocalDate.now();
		chekcin.atStartOfDay();
		chekout.atStartOfDay();
		/*if(chekcin.isBefore(now) || chekout.isBefore(LocalDate.now())) {
			throw new DomainExecption("Datas Invalidas");
		}
		else if(chekout.isBefore(chekcin)) {
			throw new DomainExecption("Datas Invalidas");
		} */
		this.checkin = chekcin;
		this.checkout = chekout;
	}
	
	@Override
	public String toString() {
		return"Reserva: Quarto " + roomNumber + ", check-in: " 
				  + checkin 
				  + ", check-out: " + checkout
				  + ", " + duration() + " noites";
	}
	
}
